{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"asse",
				"assemble_pros	function"
			],
			[
				"api",
				"api_context	statement"
			],
			[
				"Team",
				"TeamDossier	class"
			],
			[
				"League",
				"LeagueDossier	class"
			],
			[
				"Leag",
				"LeagueDossier	class"
			],
			[
				"le",
				"left_index	statement"
			],
			[
				"None",
				"NotImplementedError	class"
			],
			[
				"teamd",
				"teamdossier"
			],
			[
				"For",
				"ForeignKey	class"
			],
			[
				"De",
				"DetailView	class"
			],
			[
				"Lea",
				"LeagueDossier	class"
			],
			[
				"DateD",
				"DateTimeField	class"
			],
			[
				"cha",
				"CharField	class"
			],
			[
				"intelligence",
				"intelligence_gain"
			],
			[
				"render",
				"render_to_response	function"
			],
			[
				"req",
				"request_limit"
			],
			[
				"clea",
				"cleaned_data"
			],
			[
				"form",
				"format	function"
			],
			[
				"userpro",
				"userprofile"
			],
			[
				"In",
				"IntegerField	class"
			],
			[
				"wh",
				"which_side"
			],
			[
				"border",
				"border-color"
			],
			[
				"interest-",
				"interest-color"
			],
			[
				"background",
				"background-color"
			],
			[
				"Model",
				"ModelForm	ModelForm"
			],
			[
				"emai",
				"EmailField	class"
			],
			[
				"No",
				"NoDataFound	import"
			],
			[
				"skill",
				"skill_sample_matches	statement"
			],
			[
				"hero",
				"HeroDossier	class"
			],
			[
				"test",
				"TestCase	import"
			],
			[
				"assert",
				"assertEqual	function"
			],
			[
				"game_",
				"game_events"
			],
			[
				"endg",
				"endgame_players	statement"
			],
			[
				"Tassel",
				"TasselPlot	class"
			],
			[
				"jsoN",
				"json_data	statement"
			],
			[
				"class",
				"class_selector"
			],
			[
				"group_",
				"group_list"
			],
			[
				"groups",
				"groups"
			],
			[
				"url",
				"urlresolvers	import"
			],
			[
				"p1_role",
				"p1_role_dict	statement"
			],
			[
				"p1",
				"p1_role_dict"
			],
			[
				"radiant",
				"radiant_summaries	statement"
			],
			[
				"assignment",
				"assignment_set"
			],
			[
				"u",
				"u"
			],
			[
				"gam",
				"GameMode"
			],
			[
				"ItemWinrate",
				"ItemWinrateView	class"
			],
			[
				"Mul",
				"MultiGameModeSelect	class"
			],
			[
				"match",
				"match_id"
			],
			[
				"playermat",
				"playermatchsummary__"
			],
			[
				"Player",
				"PlayerMatchSummary	import"
			],
			[
				"ima",
				"ImageField	import"
			],
			[
				"all",
				"all_heroes	statement"
			],
			[
				"player_",
				"player_versus_winrate_json"
			],
			[
				"text-",
				"text-decoration"
			],
			[
				"outer",
				"outerWidth"
			],
			[
				"select_",
				"select_related"
			],
			[
				"div",
				"placement_div"
			],
			[
				"Outer",
				"outerWidth"
			],
			[
				"get",
				"get_object_or_404  (function)"
			],
			[
				"in",
				"intelligence"
			],
			[
				"str",
				"strength"
			],
			[
				"strength",
				"strength_gain"
			],
			[
				"selected",
				"selected_heroes	(local, instance)"
			],
			[
				"re",
				"reverse	(builtin, function)"
			],
			[
				"x",
				"x	(local, instance)"
			],
			[
				"Hero",
				"Hero	(imported, instance)"
			],
			[
				"err",
				"err	(global, instance)"
			],
			[
				"options",
				"optionsGiven"
			],
			[
				"game",
				"game_mode_choices"
			],
			[
				"y",
				"ylab	(local, instance)"
			],
			[
				"DIV",
				"div	Tag"
			],
			[
				"group",
				"group_vector_list	(local, instance)"
			],
			[
				"End",
				"EndgameChart	(imported, instance)"
			],
			[
				"doubled",
				"doubled_param_list	(global, instance)"
			],
			[
				"mul",
				"MultipleChoiceField  (class)"
			],
			[
				"BROKER_",
				"BROKER_POOL_LIMIT"
			],
			[
				"child",
				"child	(global, function)"
			],
			[
				"lst",
				"lst=	(parameter_keyword, instance)"
			],
			[
				"arg",
				"arg	(local, instance)"
			],
			[
				"uuid",
				"uuid4  (function)"
			],
			[
				"ST",
				"STATICFILES_DIRS"
			],
			[
				"int",
				"internal_name"
			],
			[
				"STATI",
				"STATICFILES_DIRS"
			],
			[
				"grde",
				"grdevices	(local, instance)"
			],
			[
				"name",
				"name_list	(local, instance)"
			],
			[
				"option",
				"optionsDict	(local, instance)"
			],
			[
				"if",
				"if	if"
			],
			[
				"inter",
				"IntegerField"
			],
			[
				"model",
				"Model"
			],
			[
				"Game",
				"GameMode	(global, class)"
			],
			[
				"mint",
				"mint	IntegerField (mint)"
			],
			[
				"min",
				"mint	IntegerField (mint)"
			],
			[
				"help",
				"help_text"
			],
			[
				"mi",
				"mimg	ImageField (mimg)"
			],
			[
				"Http",
				"HttpResponseRedirect  (class)"
			],
			[
				"lo",
				"logout  (function)"
			],
			[
				"ren",
				"render_to_response  (function)"
			],
			[
				"Image",
				"ImageFile	(imported, instance)"
			],
			[
				"Command",
				"CommandError	(imported, instance)"
			],
			[
				"Man",
				"ManyToManyField  (class)"
			],
			[
				"ass",
				"assertEqual"
			],
			[
				"futur",
				"future_poll	(local, instance)"
			],
			[
				"tr",
				"try	Try/Except/Else"
			],
			[
				"to",
				"to_file"
			],
			[
				"file",
				"filename"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 148.0,
		"selected_items":
		[
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"pretty",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"prett",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"html",
				"Set Syntax: HTML (Django)"
			],
			[
				"gist",
				"Gist: Create Public Gist"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"console",
				"Anaconda: Show error list"
			],
			[
				"pret",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pre",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"settings",
				"Preferences: SublimeLinter Settings â€“ Default"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"jsh",
				"JSHint"
			],
			[
				"sor",
				"Sort Lines"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"prefer",
				"Preferences: Settings - User"
			],
			[
				"create",
				"Gist: Create Private Gist"
			],
			[
				"private",
				"Gist: Create Private Gist"
			],
			[
				"dja",
				"Set Syntax: Python Django"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"secret",
				"Gist: Create Private Gist"
			],
			[
				"git",
				"Git: Gitk"
			],
			[
				"secre",
				"Gist: Create Private Gist"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"bro",
				"Preferences: Browse Packages"
			],
			[
				"pac",
				"Preferences: Browse Packages"
			],
			[
				"djan",
				"Set Syntax: Python Django"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"dj",
				"Set Syntax: HTML (Django)"
			],
			[
				"css",
				"Tidy CSS (Low Compression)"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"django",
				"Set Syntax: HTML (Django)"
			],
			[
				"djang",
				"Set Syntax: HTML (Django)"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"goto",
				"Goto Documentation"
			],
			[
				"snipp",
				"Snippet: filter"
			],
			[
				"subl",
				"SublimeCodeIntel: Enable Plugin"
			],
			[
				"codeintel",
				"SublimeCodeIntel: Disable Plugin"
			],
			[
				"codeint",
				"SublimeCodeIntel: Reset"
			],
			[
				"lint",
				"SublimeLinter: Show Error List"
			],
			[
				"save",
				"Project: Save As"
			],
			[
				"add",
				"Project: Add Folder"
			],
			[
				"Package",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control",
				"Package Control: Install Package"
			],
			[
				"",
				"About"
			]
		],
		"width": 561.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"x",
			"x = range(0,10)",
			"range(0,10)",
			"print range(0,10)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/ben/Projects/threes/threes/board.py",
		"/home/ben/.virtualenvs/threes/bin/postactivate",
		"/home/ben/.virtualenvs/threes/.project",
		"/home/ben/.virtualenvs/tester/bin/postactivate",
		"/home/ben/Projects/threes/.project",
		"/home/ben/.virtualenvs/tester/.project",
		"/home/ben/.virtualenvs/tester/bin/postdeactivate",
		"/home/ben/Projects/threes/tox.ini",
		"/home/ben/Projects/threes/.gitignore",
		"/home/ben/Projects/threes/tests/tile_test.py",
		"/home/ben/Projects/threes/threes/__init__.py",
		"/home/ben/Projects/threes/requirements.txt",
		"/home/ben/Projects/threes.py",
		"/home/ben/Projects/threes/threes/tile.py",
		"/home/ben/Projects/threes/threes/bag.py",
		"/home/ben/Projects/threes/tests/test_bag.py",
		"/home/ben/Projects/threes/tests/test_tile.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/convenience files/scrape calls.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/management/commands/send_invite.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/models.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/managers.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/managers.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/models.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/views.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/datadrivendota/settings/base.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/management/tasks/valve_api_calls.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/static/js/charting.js",
		"/home/ben/Projects/test_puddle.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/management/commands/update_league_games.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/templates/base.html",
		"/home/ben/Projects/twitter_puddle.py",
		"/home/ben/Projects/test_puddle.pyc",
		"/home/ben/Projects/datadrivendota/datadrivendota/Procfile",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/utils/charts.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/templates/heroes/detail.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/templates/heroes/form.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/forms.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/models.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/templates/_image_form_embed.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/datadrivendota/celery_app.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/datadrivendota/views.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/templates/home.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/utils/views.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/views.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/templates/matches/_single_match_card.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/templates/matches/match_hero_context.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/templates/players/comparison.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/templates/players/hero_style.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/form_fields.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/form_fields.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/templates/teams/team_detail.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/form_fields.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/views.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/forms.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/form_fields.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/templates/leagues/league_detail.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/form_fields.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/urls.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/static/js/project.js",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/json_data.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/templates/players/detail.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/views.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/templates/leagues/league_list.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/urls.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/urls.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/managers.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/mixins.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/models.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/views.py",
		"/home/ben/Projects/datadrivendota/Legion blog.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/items.json",
		"/home/ben/Projects/datadrivendota/datadrivendota/import_command_docs.txt",
		"/home/ben/Projects/datadrivendota/datadrivendota/item_detail.json",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/managers.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/admin.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/leagues/admin.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/management/commands/denormalization_check.py",
		"/home/ben/Projects/datadrivendota/reinitialize notes.txt",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/datadrivendota/settings/production.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/convenience files/blog-text-frags.txt",
		"/home/ben/intro ddd.txt",
		"/home/ben/.config/sublime-text-3/Packages/SublimeLinter/Default (Linux).sublime-keymap",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/management/commands/importHeroStats.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/json_data.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/management/commands/scrapeheroes.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/json_data.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/fabfile.py",
		"/home/ben/Projects/codility_1.py",
		"/home/ben/Projects/python_golf.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/datadrivendota/celery_config.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/datadrivendota/settings/local.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/json_data.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/requirements/base.txt",
		"/home/ben/Projects/datadrivendota/datadrivendota/.gitignore",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/templates/matches/_match_cards.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/templates/teams/team_list.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/models.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/mixins.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/teams/forms.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/mixins.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/templates/matches/detail.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/fabfile.pyc",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/templates/matches/follow.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/templates/matches/_match_list.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/static/css/project.less",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/templatetags/player_extras.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/heroes/management/commands/scrapeloreandmugshot.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/utils/management/commands/generate_static_error_pages.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/assets/js/d3/bin/uglify",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/management/tasks/tasks.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/datadrivendota/urls.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/migrations/0012_auto__chg_field_match_league_id__add_index_match_league_id.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/matches/json_data.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/utils/__init__.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/urls.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/datadrivendota/forms.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/templates/data_management/match_import_request.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/templates/data_management/follow.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/templates/data_management/tracking.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/templates/data_management/management.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/datadrivendota/mixins.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/templates/players/management.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/players/templates/players/match_import_request.html",
		"/usr/local/lib/python2.7/dist-packages/django/core/urlresolvers.py",
		"/usr/local/lib/python2.7/dist-packages/django/views/generic/edit.py",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/templates/_message.html",
		"/home/ben/Projects/datadrivendota/datadrivendota/datadrivendota/utils/exceptions.py",
		"/home/ben/.virtualenvs/tester/lib/python2.7/site-packages/django/views/generic/edit.py"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"production.py",
			"r.py",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"retrieve",
			"acquirepl",
			"chain",
			"acquirepl",
			"ability",
			"match_ability",
			"match)ability",
			"progres",
			"pro",
			"h3",
			"assemble_pros",
			"get",
			"get_track",
			"assemble_pros",
			"assem",
			"assemble_pro",
			"MirrorProNames",
			"pros",
			"teams",
			"self.result",
			"updateteamlo",
			"GetUGCFileDetails",
			"updateteamlogos",
			"UploadTeam",
			"UploadTeam\n",
			"updateteamlogo",
			"updateteamlogos",
			"UpdateTeamLogos",
			"updateteamlogos",
			"sponsor",
			"get_logo_image",
			"updateteamlo",
			"get_logo_image",
			"regen",
			"name",
			"stat",
			"margin",
			"inner_ch",
			"inner",
			"inner_chart",
			"content",
			"f.name",
			"file",
			"UpdateProN",
			"leaguelogos",
			"128",
			"VALVE_RATE",
			"rpr",
			"rpr\n",
			"MirrorLeagueLogos",
			"UpdateLeagueGames",
			"UploadLeague",
			"AcquireLeagues",
			"UpdateTeamLogos",
			"UploadTeam",
			"AcquireTeamDossiers",
			"AcquireTeams",
			"AcquireMatches",
			"AcquireMatches\n",
			"AcquireMatches",
			"AcquireMatches\n",
			"AcquireHeroSkillData",
			"AcquireHeroSkillData\n",
			"AcquirePlayerData",
			"AcquirePlayerData\n",
			"RefreshPlayerMatchDetail",
			"UpdatePlayerPersonas",
			"RefreshUpdatePlayerPersonas",
			"UploadMatch",
			"RetrievePlayerRecords",
			"ValveApiCall",
			"W",
			"print",
			"class ",
			":",
			"\\(.*\\)",
			"^[.*]\\(",
			"^[.*](",
			"(",
			"([.*])",
			"^(?([.*])",
			"^(?!(?:class)).*\\s*",
			"^(?!(?:class|REM)).*\\s*",
			"assemble_pros",
			"pro",
			"player_0",
			"pass",
			"damage",
			"player_0",
			"import",
			"hero_n",
			"team",
			"Q",
			"role",
			"exc",
			"open(f)",
			"suffix",
			"blank",
			"blank-",
			"blank",
			"result",
			"apic",
			"player_0",
			"valveap",
			"matches_requested",
			"matches_requested\n",
			"refreshup",
			"AcquirePlayerData",
			"url",
			"logger",
			"refresh",
			"acquirel",
			"updatepl",
			"id\": 243",
			"200",
			"exter",
			"logo",
			"100",
			"UpdateTeamLo",
			"acquireleague",
			"updateteam",
			"updateteamlo",
			"timeout",
			"updateteamlo",
			"logo",
			"permission",
			"permi",
			"code"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"h4",
			"",
			"> ",
			"",
			"dire",
			"",
			"team",
			"",
			"Ben",
			"Rachel",
			"dire_",
			": ",
			"Thoughts",
			"radiant_cast_list",
			"dire_cast_list",
			"summary",
			"radiant_infodict",
			"None",
			"game_modes",
			"panel_var",
			"game_modes",
			"min_date_utc",
			"'None'",
			"panel_var",
			"ChartFormView",
			"panel_var",
			"ChartFormView",
			"datalist",
			"panel_var",
			"",
			"panel_var",
			"object",
			"panel_var",
			"",
			" = ",
			"",
			"hero_chart_api",
			"",
			"hero_chart_api",
			"repeat(1, 1)",
			"225",
			"220",
			"200",
			"190",
			"170",
			"250",
			"180",
			"190",
			"200",
			"175",
			"134",
			"234",
			"roles_json_name",
			"stats",
			"linear_y_scale(params)",
			"linear_x_scale(params)",
			"\\n http://",
			"+ \"::\"+str(t.elapsed)",
			"",
			",",
			"data",
			"retrieve",
			"    ",
			"df.all",
			"% (clock()-start,)",
			"}\\n"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": ".gitignore.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 317.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
